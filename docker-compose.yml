version: '3.8'

services:
  web:
    build:
      context: .
      dockerfile: Dockerfile
    command: >
      sh -c "python manage.py migrate --noinput &&
             python manage.py collectstatic --noinput &&
             gunicorn etag.wsgi:application --bind 0.0.0.0:8000 --workers 3 --timeout 120"
    expose:
      - "8000"
    volumes:
      - .:/app
      - /var/www/my-business-card.kz/static:/app/static
      - /var/www/my-business-card.kz/media:/app/media
      - /var/www/my-business-card.kz/logs:/app/logs
    env_file:
      - .env.prod
    environment:
      - DJANGO_SETTINGS_MODULE=etag.settings.production
      - PYTHONUNBUFFERED=1
    depends_on:
      - db
    networks:
      - database_network
      - web_network
    restart: always
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000"]
      interval: 30s
      timeout: 10s
      retries: 3

  nginx:
    build:
      context: .
      dockerfile: Dockerfile.nginx
    ports:
      - "8080:80"
    volumes:
      - /var/www/my-business-card.kz/static:/app/static
      - /var/www/my-business-card.kz/media:/app/media
    networks:
      - web_network
    depends_on:
      - web
    restart: always
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80"]
      interval: 30s
      timeout: 10s
      retries: 3

  db:
    image: postgres:13
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=mycardbusines
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=Mycard-business&2025
    networks:
      - database_network
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U admin -d mycardbusines"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  postgres_data:

networks:
  database_network:
    external: true
  web_network:
    driver: bridge 